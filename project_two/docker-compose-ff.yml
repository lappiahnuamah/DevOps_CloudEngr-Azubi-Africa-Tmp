
services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: project_two
      MYSQL_USER: root
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      
    networks:
      - clms-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5

  # PHP Backend (Laravel)
  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: clms-backend
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ./back-end:/var/www/html
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=project_two
      - DB_USERNAME=root
      - DB_PASSWORD=admin
      # - REDIS_HOST=redis
    networks:
      - clms-network

  # Frontend (Node.js)
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: clms-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./front-end:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
      - BACKEND_API_HOST=http://localhost:8000
      # Docker service name for server-side API calls
      - NEXT_PRIVATE_BACKEND_HOST=http://clms-backend:8000
    depends_on:
      - backend
    networks:
      - clms-network

  # Optional Services
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - clms-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" 
      - "8025:8025" 
    networks:
      - clms-network

volumes:
  mysql_data:
    name: mysql_data
  redis_data:
    name: redis_data

networks:
  clms-network:
    name: clms-network 
    driver: bridge